# If this workflow is triggered by a push to master, it
#        deploys a SNAPSHOT
# If this workflow is triggered by publishing a Release, it
#        deploys a RELEASE with the selected version
#        updates the project version by incrementing the patch version
#        commits the version update change to the repository's default branch.
name: Deploy artifacts with Maven
on:
  push:
    branches: [main]
  release:
    types: [published]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      name: Checkout
    - name: Set up Java environment
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: temurin
        gpg-private-key: ${{ secrets.MAVEN_CENTRAL_GPG_SIGNING_KEY_SEC }}
        gpg-passphrase: MAVEN_CENTRAL_GPG_PASSPHRASE
        cache: maven
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Deploy SNAPSHOT / Release
      uses: camunda-community-hub/community-action-maven-release@v2
      with:
        maven-release-options: -P!autoFormat
        maven-additional-options: -P!autoFormat
        release-version: ${{ github.event.release.tag_name }}
        nexus-usr: ${{ secrets.NEXUS_USR }}
        nexus-psw: ${{ secrets.NEXUS_PSW }}
        sonatype-central-portal-usr: ${{ secrets.COMMUNITY_HUB_MAVEN_CENTRAL_CP_USR }}
        sonatype-central-portal-psw: ${{ secrets.COMMUNITY_HUB_MAVEN_CENTRAL_CP_PSW }}
        maven-gpg-passphrase: ${{ secrets.MAVEN_CENTRAL_GPG_SIGNING_KEY_PASSPHRASE }}
        maven-auto-release-after-close: true
        github-token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.event.release.target_commitish }}
      id: release
    - if: github.event.release
      name: Attach artifacts to GitHub Release (Release only)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.release.outputs.artifacts_archive_path }}
        asset_name: ${{ steps.release.outputs.artifacts_archive_path }}
        asset_content_type: application/zip
